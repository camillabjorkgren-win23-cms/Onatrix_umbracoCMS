@using Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core;
@using Umbraco.Cms.Core.Models.PublishedContent;
@using Umbraco.Cms.Core.Routing;
@using Umbraco.Extensions;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider


@{
    var selection = Model.Root().Children.Where(x => x.IsVisible(PublishedValueFallback)).ToArray();


    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x => x.ContentType.Alias == "settings") ?? null;
    var logoImg = settings?.Value<IPublishedContent>("siteLogoType").Url() ?? null;
    var siteName = settings?.Value<string>("siteName") ?? "";
}


<nav class="navbar" aria-label="main-navigation" class="main-navigation">

    <div class="container">
        @if (logoImg != null)
        {
            <a class="logo-img" href="/">
                <img src="@logoImg" alt="@siteName">
            </a>
        }

        <button class="btn-menu" onclick="toggleMenu()" aria-label="toggle open main menu" aria-controls="main-menu" aria-expanded="false">
            <i class="fa-regular fa-bars" aria-hidden="true"></i>
        </button>

        <ul class="main-menu">
            @if (selection?.Length > 0)
            {
                @foreach (var item in selection)
                {
                    <li><a href="@item.Url(PublishedUrlProvider)" title="@item.Name" class="@(item.IsAncestorOrSelf(Model) ? "nav-link active" : "nav-link")">@item.Name</a></li>
                }
                <li class="search-link">
                    <a href="/contact" class="nav-link">
                        <span class="visually-hidden">Search</span>
                        <i class="fa-regular fa-magnifying-glass" aria-hidden="true"></i>
                    </a>
                </li>


            }
        </ul>
    </div>
</nav>

